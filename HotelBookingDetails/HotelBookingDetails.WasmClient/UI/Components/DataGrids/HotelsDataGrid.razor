@using HotelBookingDetails.Domain.Entity
@inject ApiClientWrapper Client
@inject NavigationManager NavManager

<Card>
    <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h4>Отели</h4>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
                <Button Color="Color.Primary" Clicked="OpenCreateModal">
                    Создать
                </Button>
            </Column>

        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="Hotel" Data="_hotels" Responsive Striped>
            <DataGridColumns>
                <DataGridColumn Width="150px" TItem="Hotel" Field="@nameof(Hotel.Id)"
                                Caption="Действия">
                    <DisplayTemplate>
                        <Dropdown>
                            <DropdownToggle Color="Color.Primary">
                                Действия
                            </DropdownToggle>
                            <DropdownMenu>
                                <DropdownItem Clicked="() => OpenEditPage(context)">
                                    Редактировать
                                </DropdownItem>
                                <DropdownItem Clicked="() => DeleteHotelAsync(context)">
                                    Удалить
                                </DropdownItem>
                            </DropdownMenu>
                        </Dropdown>
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="Hotel" Field="@nameof(Hotel.Name)" Caption="Название">
                </DataGridColumn>
                <DataGridColumn TItem="Hotel" Field="@nameof(Hotel.Address)"
                                Caption="Адрес">
                </DataGridColumn>
                <DataGridColumn TItem="Hotel" Field="@nameof(Hotel.City)" Caption="Город">
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>
<HotelCreateModal @ref="_hotelModal" OnHotelAdded="@HandleHotelAdded"/>


@code {
    [Parameter] public EventCallback OnDataChanged { get; set; }
    
    private ICollection<Hotel> _hotels = [];

    private HotelCreateModal _hotelModal = new();

    protected override async Task OnInitializedAsync()
    {
        await RefreshHotels();
        await base.OnInitializedAsync();
    }

    private async Task OpenCreateModal()
    {
        await _hotelModal.Show();
    }

    private async Task HandleHotelAdded()
    {
        await RefreshHotels();
        await OnDataChanged.InvokeAsync();
    }

    private async Task RefreshHotels()
    {
        _hotels = await Client.GetHotels();
    }

    private void OpenEditPage(Hotel hotel)
    {
        NavManager.NavigateTo($"hotel/{hotel.Id}");
    }

    private async Task DeleteHotelAsync(Hotel hotel)
    {
        await Client.DeleteHotel(hotel.Id);
        await RefreshHotels();
        await OnDataChanged.InvokeAsync();
    }
}